{"version":3,"sources":["Components/Filter/Filter.module.css","redux/phonebook/contacts-actions.js","redux/phonebook/contacts-operations.js","Components/ContactForm/ContactForm.js","redux/phonebook/contacts-selectors.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/phonebook/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","contactsActions","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","updateContactRequest","updateContactSuccess","updateContactError","changeFilter","axios","defaults","baseURL","actions","ContactForm","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","event","target","value","className","styles","form","method","onSubmit","preventDefault","contact","post","then","data","catch","error","addContact","label","input","type","pattern","title","required","onChange","btn","getFilter","state","contacts","filter","getTotalContacts","items","length","getError","getLoadingStatus","loading","getFiltredContacts","getContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","useEffect","get","list","map","id","item","onClick","contactId","delete","Filter","e","App","totalContacts","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,IAAM,sB,2KCiCvCC,EAdS,CACtBC,oBAnB0BC,YAAa,gCAoBvCC,oBAnB0BD,YAAa,gCAoBvCE,kBAnBwBF,YAAa,8BAoBrCG,kBAlBwBH,YAAa,8BAkBlBI,kBAjBKJ,YAAa,8BAkBrCK,gBAjBsBL,YAAa,4BAkBnCM,qBAhB2BN,YAAa,iCAgBlBO,qBAfKP,YAAa,iCAgBxCQ,mBAfyBR,YAAa,+BAgBtCS,qBAd2BT,YAAa,iCAexCU,qBAd2BV,YAAa,iCAexCW,mBAdyBX,YAAa,+BAetCY,aAbmBZ,YAAa,0BChBlCa,IAAMC,SAASC,QAAU,wBAEzB,IAAQhB,EAAuPiB,EAAvPjB,oBAAqBE,EAAkOe,EAAlOf,oBAAqBC,EAA6Mc,EAA7Md,kBAAmBC,EAA0La,EAA1Lb,kBAAmBC,EAAuKY,EAAvKZ,kBAAmBC,EAAoJW,EAApJX,gBAAiBC,EAAmIU,EAAnIV,qBAAsBC,EAA6GS,EAA7GT,qBAAsBC,EAAuFQ,EAAvFR,mB,GAAuFQ,EAAnEP,qBAAmEO,EAA7CN,qBAA6CM,EAAvBL,mB,sBCGzN,SAASM,IACpB,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACjB,MAAwBA,EAAMC,OAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,OAAQP,GACJ,IAAK,OACDC,EAAQM,GACR,MACJ,IAAK,SACDJ,EAAUI,GACV,MACJ,QACI,SAWZ,OACI,uBAAMC,UAAWC,IAAOC,KAAMC,OAAO,OAAOC,SAR3B,SAAAP,GACjBA,EAAMQ,iBACNhB,EDhBkB,SAACG,EAAME,GAAP,OAAkB,SAAAL,GAcxC,IAAMiB,EAAU,CACZd,OACAE,UAGJL,EAASf,KAETU,IAAMuB,KAAK,YAAaD,GAASE,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcpB,EAASd,EAAkBkC,OAAQC,OAAM,SAAAC,GAAK,OAAItB,EAASb,EAAgBmC,QCLlHC,CAAWpB,EAAME,IAC1BD,EAAQ,IACRE,EAAU,KAIV,UACI,wBAAOK,UAAWC,IAAOY,MAAzB,kBACA,uBAAOb,UAAWC,IAAOa,MACzBC,KAAK,OACLvB,KAAK,OACLwB,QAAQ,qOACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUvB,EACVG,MAAOP,OAGP,wBAAOQ,UAAWC,IAAOY,MAAzB,oBACI,uBAAOE,KAAK,MAAMvB,KAAK,SACvBwB,QAAQ,yFACRC,MAAM,giBACNjB,UAAWC,IAAOa,MAAOf,MAAOL,EAAQyB,SAAUvB,EAAcsB,UAAQ,OAE5E,wBAAQH,KAAK,SACbf,UAAWC,IAAOmB,IADlB,4BCpDL,IACMC,EAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,QACpCC,EAAmB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,MAAMC,QACjDC,EAAW,SAAAN,GAAK,OAAIA,EAAMC,SAASZ,OACnCkB,EAAmB,SAAAP,GAAK,OAAIA,EAAMC,SAASO,SAE3CC,EAAqB,SAAAT,GAC9B,IAAMC,EAPiB,SAAAD,GAAK,OAAIA,EAAMC,SAASG,MAO9BM,CAAYV,GAEvBW,EADSZ,EAAUC,GACOY,cAEhC,OAAOX,EAASC,QAAO,SAAAlB,GAAO,OAAIA,EAAQd,KAAK2C,SAASF,O,gBCH7C,SAASG,IACpB,IAAMzB,EAAQ0B,YAAYT,GACpBE,EAAUO,YAAYR,GACtBxC,EAAWC,cACjBgD,qBAAU,WACNjD,GHP0B,SAAAA,GAC9BA,EAASnB,KAETc,IAAMuD,IAAI,aAAa/B,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcpB,EAASjB,EAAoBqC,OAAQC,OAAM,SAAAC,GAAK,OAAItB,EAAShB,EAAkBsC,YGKtH,IACH,IAAMY,EAAWc,YAAYN,GAE7B,OACA,qCACCD,GAAW,oBAAI9B,UAAWC,IAAO6B,QAAtB,wBACXnB,GAAS,oBAAIX,UAAWC,IAAOU,MAAtB,SAA8BA,IACxC,oBAAIX,UAAWC,IAAOuC,KAAtB,SACKjB,EAASkB,KAAK,gBAAGC,EAAH,EAAGA,GAAIlD,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACX,qBAAaM,UAAWC,IAAO0C,KAA/B,UACI,oBAAG3C,UAAWC,IAAOT,KAArB,UAA4BA,EAA5B,KAAmC,+BAAOE,OAC1C,wBAAQqB,KAAK,SAASf,UAAWC,IAAOmB,IAAKwB,QAAS,kBAAMvD,GHY/CwD,EGZsEH,EHYzD,SAAArD,GACtCA,EAASZ,KAETO,IAAM8D,OAAN,oBAA0BD,IAAarC,MAAK,kBAAMnB,EAASX,EAAqBmE,OAAanC,OAAM,SAAAC,GAAK,OAAItB,EAASV,EAAmBgC,UAH/G,IAAAkC,GGZb,sBAFKH,W,qBChBN,SAASK,IACpB,IAAMhD,EAAQsC,YAAYhB,GACpBhC,EAAWC,cAEjB,OACA,wBAAOU,UAAWC,IAAOY,MAAzB,kCAEI,uBAAOb,UAAWC,IAAOa,MAAOC,KAAK,OAAOhB,MAAOA,EAAOoB,SAAU,SAAA6B,GAAC,OAAI3D,EAASN,EAAaiE,EAAElD,OAAOC,cCLjG,SAASkD,IACtB,IAAMC,EAAgBb,YAAYZ,GAEjC,OACC,sBAAKzB,UAAU,MAAf,UACE,2CACA,cAACZ,EAAD,IAEA,mDAAsB8D,EAAtB,QACA,cAACH,EAAD,IACA,cAACX,EAAD,O,gCCfElE,EAAsMiB,EAAtMjB,oBAAqBE,EAAiLe,EAAjLf,oBAAqBC,EAA4Jc,EAA5Jd,kBAAmBC,EAAyIa,EAAzIb,kBAAmBC,EAAsHY,EAAtHZ,kBAAmBC,EAAmGW,EAAnGX,gBAAiBC,EAAkFU,EAAlFV,qBAAsBC,EAA4DS,EAA5DT,qBAAsBC,EAAsCQ,EAAtCR,mBAAqBI,EAAiBI,EAAjBJ,aAEvL2C,GAAQyB,YAAc,IAAD,mBACtB/E,GAAsB,SAACgF,EAAD,YAAMC,WADN,cAGtB9E,GAAoB,SAAC+C,EAAD,OAAU+B,EAAV,EAAUA,QAAV,4BAA4B/B,GAA5B,CAAmC+B,OAHjC,cAKtB3E,GAAuB,SAAC4C,EAAD,OAAU+B,EAAV,EAAUA,QAAV,OAAwB/B,EAAME,QAAO,SAAAlB,GAAO,OAAIA,EAAQoC,KAAOW,QALhE,IAUrBvB,GAAUqB,aAAc,GAAD,mBACxBjF,GAAsB,kBAAM,KADJ,cAExBE,GAAsB,kBAAM,KAFJ,cAGxBC,GAAoB,kBAAM,KAHF,cAIxBC,GAAoB,kBAAM,KAJF,cAKxBC,GAAoB,kBAAM,KALF,cAMxBC,GAAkB,kBAAM,KANA,cAOxBC,GAAuB,kBAAM,KAPL,cAQxBC,GAAuB,kBAAM,KARL,cASxBC,GAAqB,kBAAM,KATH,IAevB6C,GAAS2B,YAAc,GAAD,eACvBpE,GAAe,SAACqE,EAAD,YAAMC,YAGpB1C,GAAQwC,YAAc,MAAD,mBACtB9E,GAAoB,SAAC+E,EAAD,YAAMC,WADJ,cAEtB7E,GAAkB,SAAC4E,EAAD,YAAMC,WAFF,cAGtB1E,GAAqB,SAACyE,EAAD,YAAMC,WAHL,cAItBnF,GAAsB,kBAAM,QAJN,cAKtBI,GAAoB,kBAAM,QALJ,cAMtBG,GAAuB,kBAAM,QANP,IASZ6E,eAAgB,CAAE5B,SAAOI,WAASN,UAAQb,W,iBC3BnD4C,GAAU,sBACTC,YAAqB,CACpBC,kBAAmB,CACfC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHtD,CAKRC,YAwBOC,GAXDC,YAAe,CACzBC,QAAS,CACL7C,SAAU8C,GACVd,cAEAe,UAAUC,K,MC9BlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SAEI,cAAC,EAAD,QAINS,SAASC,eAAe,U,kBCjB1B7G,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,kBCA/HD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,IAAM,4B","file":"static/js/main.4c72d556.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1nvwZ\",\"btn\":\"Filter_btn__2FIAR\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nconst fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst updateContactRequest = createAction('contacts/updateContactRequest');\r\nconst updateContactSuccess = createAction('contacts/updateContactSuccess');\r\nconst updateContactError = createAction('contacts/updateContactError');\r\n\r\nconst changeFilter = createAction('contscts/changeFilter');\r\n\r\nconst contactsActions = {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest, addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest, deleteContactSuccess,\r\n  deleteContactError,\r\n  updateContactRequest,\r\n  updateContactSuccess,\r\n  updateContactError,\r\n  changeFilter\r\n  };\r\n\r\nexport default contactsActions;","import axios from 'axios';\r\nimport actions from './contacts-actions';\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst { fetchContactRequest, fetchContactSuccess, fetchContactError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, updateContactRequest, updateContactSuccess, updateContactError } = actions;\r\n\r\nexport const fetchContact = () => dispatch => {\r\n    dispatch(fetchContactRequest());\r\n\r\n    axios.get('/contacts').then(({ data }) => dispatch(fetchContactSuccess(data))).catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n    // const isInContacts = state.some(contact => contact.name === name);\r\n    //     if (isInContacts) { \r\n    //         let replaceAgreement = window.confirm(`${name} is already in contacts. Replace ${name} number?`);\r\n\r\n    //         if (!replaceAgreement) {\r\n    //             const update = { number };\r\n    //             dispatch(updateContactRequest());\r\n\r\n    //             axios\r\n    //             .patch(`/contacts/${name}`, update)\r\n    //             .then(({ data }) => dispatch(updateContactSuccess(data)))\r\n    //             .catch(error => dispatch(updateContactError(error)));\r\n    //         } \r\n    const contact = {\r\n        name, \r\n        number\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios.post('/contacts', contact).then(({ data }) => dispatch(addContactSuccess(data))).catch(error => dispatch(addContactError(error)));\r\n// }\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios.delete(`/contacts/${contactId}`).then(() => dispatch(deleteContactSuccess(contactId))).catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport const updateContact = (contactId, number) => dispatch => {\r\n    const update = { number };\r\n    dispatch(updateContactRequest());\r\n\r\n    axios.patch(`/contacts/${contactId}`, update).then(({ data }) => dispatch(updateContactSuccess(data))).catch(error => dispatch(updateContactError(error)));\r\n};\r\n\r\n// const operations = { fetchContact, addContact, deleteContact, updateContact };\r\n// export default operations;\r\n","import React, { useState } from 'react';\r\n// import useLocalStorage from '../../hooks/useLocalStorage';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch  } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook/contacts-operations';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');  \r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(addContact(name, number));\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    return(\r\n        <form className={styles.form} method=\"post\" onSubmit={handleSubmit}>\r\n            <label className={styles.label}>Name: \r\n            <input className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ]+(([' -][a-zA-Zа-яА-ЯІіЇїҐґ ])?[a-zA-Zа-яА-ЯІіЇїҐґ]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n            value={name}\r\n          />\r\n            </label>\r\n            <label className={styles.label}>Number: \r\n                <input type=\"tel\" name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\" \r\n                className={styles.input} value={number} onChange={handleChange} required />\r\n            </label>\r\n            <button type=\"submit\" \r\n            className={styles.btn}>\r\n                Add contact\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\nContactForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n};\r\n\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getTotalContacts = state => state.contacts.items.length;\r\nexport const getError = state => state.contacts.error;\r\nexport const getLoadingStatus = state => state.contacts.loading;\r\n\r\nexport const getFiltredContacts = state => {\r\n    const contacts = getContacts(state);\r\n    const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n   \r\n    return contacts.filter(contact => contact.name.includes(normalizedFilter))};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFiltredContacts, getError, getLoadingStatus } from '../../redux/phonebook/contacts-selectors';\r\nimport { fetchContact, deleteContact } from '../../redux/phonebook/contacts-operations';\r\nimport styles from './ContactList.module.css';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function ContactList() { \r\n    const error = useSelector(getError);\r\n    const loading = useSelector(getLoadingStatus);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchContact());\r\n    }, []);\r\n    const contacts = useSelector(getFiltredContacts);     \r\n\r\n    return(\r\n    <>\r\n    {loading && <h2 className={styles.loading}>Loading...</h2>}\r\n    {error && <h2 className={styles.error}>{error}</h2>}\r\n    <ul className={styles.list}>\r\n        {contacts.map( ({ id, name, number }) => (\r\n            <li key={id} className={styles.item}>\r\n                <p className={styles.name}>{name}: <span>{number}</span></p>\r\n                <button type=\"button\" className={styles.btn} onClick={() => dispatch(deleteContact(id))}>Delete</button>\r\n            </li>\r\n        ) )\r\n        }\r\n    </ul>\r\n    </>\r\n)};\r\nContactList.propTypes = {\r\n    id: PropTypes.any,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/phonebook/contacts-selectors';\r\nimport changeFilter from '../../redux/phonebook/contacts-actions';\r\nimport styles from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n    const value = useSelector(getFilter);\r\n    const dispatch = useDispatch();\r\n\r\n    return(\r\n    <label className={styles.label}>\r\n        Find contacts by name\r\n        <input className={styles.input} type=\"text\" value={value} onChange={e => dispatch(changeFilter(e.target.value))}/>\r\n    </label>\r\n)};\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\nimport { useSelector } from 'react-redux';\r\nimport ContactForm from './Components/ContactForm';\r\nimport ContactList from './Components/ContactList';\r\nimport Filter from './Components/Filter';\r\nimport { getTotalContacts } from './redux/phonebook/contacts-selectors'\r\n\r\nexport default function App() {\r\n  const totalContacts = useSelector(getTotalContacts);\r\n\r\n   return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts (total: {totalContacts}) </h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>        \r\n  ); \r\n}\r\n\r\nApp.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape(\r\n      {\r\n        id: PropTypes.any.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n  ),\r\n  totalContacts: PropTypes.number,\r\n};\r\n\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from './contacts-actions';\r\n\r\nconst { fetchContactRequest, fetchContactSuccess, fetchContactError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError,  changeFilter } = actions;\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(contact => contact.id !== payload),\r\n    \r\n    // [updateContactSuccess]: (state, { payload }) => state.map(contact => contact.name === payload.name ? { ...contact, number: payload.number } : contact )\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n    // [updateContactRequest]: () => true,\r\n    // [updateContactSuccess]: () => false,\r\n    // [updateContactError]: () => false,\r\n})\r\n           \r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContactError]: (_, { payload }) => payload,\r\n    [addContactError]: (_, { payload }) => payload,\r\n    [deleteContactError]: (_, { payload }) => payload,\r\n    [fetchContactRequest]: () => null,\r\n    [addContactRequest]: () => null,\r\n    [deleteContactRequest]: () => null,\r\n  });\r\n\r\nexport default combineReducers({ items, loading, filter, error });","// import { combineReducers, createStore } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './phonebook/contacts-reducer';\r\nimport { logger } from 'redux-logger';\r\nimport {\r\n    // persistStore, \r\n    // persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER, \r\n} from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }), logger, \r\n];\r\n\r\n// const contactsPersistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n//     blacklist: ['filter'],\r\n// };\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactsReducer,\r\n// });\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer, \r\n        middleware,    \r\n        // devTools: true,\r\n        devTools: process.env.NODE_ENV === 'development',\r\n}});\r\n// const persistor = persistStore(store);\r\n\r\n// const newstore = { store, persistor };\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={<h3>Загружаем локальное хранилище</h3>} persistor={store.persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__DtwC1\",\"label\":\"ContactForm_label__364Wz\",\"input\":\"ContactForm_input__12S31\",\"btn\":\"ContactForm_btn__Q4XF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1ecuI\",\"item\":\"ContactList_item__1tDqZ\",\"name\":\"ContactList_name__1s29u\",\"btn\":\"ContactList_btn__ji1Rq\"};"],"sourceRoot":""}